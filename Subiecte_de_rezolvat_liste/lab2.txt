1)
type adr = ^celula;
celula = record 
nr : real;
next : adr;
end;
var first, last:adr;
med:real;
number:real;
count:integer;
procedure include(x:real);
var r:adr;
begin
new(r);
 r^.nr := x;
 inc(count);
  r^.next := first^.next;
  first^.next := r;
end;

procedure afisare;
var r:adr;
begin
  r:= first^.next;
  while r<> last do
  begin
    writeln(r^.nr);
    r:= r^.next;
  end;
end;

begin
  new(first);
  new(last);
  first^.next := last;
  repeat
    writeln('Dati numarul');
    readln(number);
    if (number <> 0) then
      begin
    include(number);
     med:= med +number;
     end;
  until number = 0 ;
  writeln('afisate invers');
  afisare;
  writeln('media=', med/(count));
end.

2)
type adr = ^consumator;
consumator = record
name: string;
age : integer;
phone : string;
next : adr;
end;
var first, last: adr;
procedure includ;
var r:adr;
begin
  new(R);
  r:= last;
  writeln('Dati consumatorul');
  writeln('Numele');
  readln(r^.name);
  writeln('Virsta');
  readln(R^.age);
  writeln('Numarul de telefon');
  readln(R^.phone);
  new(last);
  r^.next := last;
end;

procedure firstFive;
var r:adr;
counter:integer;
begin
  counter := 0;
  r := first^.next;
  while ((r <> last) and (counter < 5)) do
  begin
    writeln('Numele');
  writeln(r^.name);
  writeln('Virsta');
  writeln(R^.age);
  writeln('Numarul de telefon');
  writeln(R^.phone);
  inc(counter);
  r:=R^.next;
  end;
end;


procedure ageHigher;
var r:adr;
begin
  r := first^.next;
  while (r <> last) do
  begin
    if (R^.age > 20) then
      begin
    writeln('Numele');
  writeln(r^.name);
  writeln('Virsta');
  writeln(R^.age);
  writeln('Numarul de telefon');
  writeln(R^.phone);
  end;
  r:=R^.next;
  end;
end;

begin
  new(first);
  new(last);
  first^.next := last;
  for var i:= 1 to 6 do
    includ;
    writeln('///////////////');
  firstFive;
  writeln('/////////////////');
  ageHigher;
end.

3)
